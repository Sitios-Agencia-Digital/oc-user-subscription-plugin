<?php

namespace Fytinnovations\Userconnect\Components;

use Cms\Classes\ComponentBase;
use Fytinnovations\UserConnect\Models\{Subscription, Category, Subscriber};
use Lang;
use October\Rain\Database\ModelException;

class SubscriptionForm extends ComponentBase
{
    /**
     * Store whether the subscription is successful or failure
     *
     * @var innovations\UserConnect\Models\Subscriber
     */
    public Subscription $subscription;

    /**
     * Text to be displayed on the subscribe button
     *
     * @var string
     */
    public string $subscribeButtonText;

    /**
     * The message to be displayed when the subscription is successful
     */
    public string $successMessage;

    /**
     * The message that will be displayed when the subscription failes. This
     * will be automatically generated by the system
     * 
     * @var string
     */
    public string $failureMessage;

    /**
     * Holds the category to which the user will be subscribed to.
     */
    public Category $category;

    public function componentDetails()
    {
        return [
            'name'        => 'fytinnovations.userconnect::lang.components.subscriptionform.name',
            'description' => 'fytinnovations.userconnect::lang.components.subscriptionform.description'
        ];
    }

    public function defineProperties()
    {
        return [
            'subscribeButtonText' => [
                'title' => 'fytinnovations.userconnect::lang.components.subscriptionform.properties.subscribeButtonText.title',
                'description' => 'fytinnovations.userconnect::lang.components.subscriptionform.properties.subscribeButtonText.description',
                'default' => Lang::get('fytinnovations.userconnect::lang.components.subscriptionform.properties.subscribeButtonText.default'),
                'type' => 'string',
            ],
            'successMessage' => [
                'title' => 'fytinnovations.userconnect::lang.components.subscriptionform.properties.successMessage.title',
                'description' => 'fytinnovations.userconnect::lang.components.subscriptionform.properties.successMessage.description',
                'default' => Lang::get('fytinnovations.userconnect::lang.components.subscriptionform.properties.successMessage.default'),
                'type' => 'string',
            ],
            'category' => [
                'title' => 'fytinnovations.userconnect::lang.components.subscriptionform.properties.category.title',
                'description' => 'fytinnovations.userconnect::lang.components.subscriptionform.properties.category.description',
                'type' => 'dropdown',
                'required' => true
            ]
        ];
    }

    /**
     * Get options for the category dropdown inside the component
     *
     * @return array
     */
    public function getCategoryOptions()
    {
        return Category::lists('name', 'id');
    }

    /**
     * {@inheritDoc}
     *
     */
    public function init(): void
    {
        $this->subscribeButtonText = $this->property('subscribeButtonText');
        $this->successMessage = $this->property('successMessage');
        $this->category = Category::find($this->property('category'));
    }

    /**
     * Ajax handler run when the user clicks the subscribe button
     *
     * @return array
     */
    public function onSubscribe(): array
    {
        try {
            $subscriber = Subscriber::firstOrCreate(['email' => post('email')]);

            $this->subscription = Subscription::create([
                'subscriber_id' => $subscriber->id,
                'category_id' => $this->category->id,
            ]);
            
        } catch (\Throwable $th) {
            $this->failureMessage = $th->getMessage();
        }
        return ['#subscription-box' => $this->renderPartial('@default')];
    }
}
